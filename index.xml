<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gabriel Vera</title>
    <link>https://www.gabrieljosephvera.com/</link>
    <description>Recent content on Gabriel Vera</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Oct 2017 21:28:43 -0500</lastBuildDate>
    
	<atom:link href="https://www.gabrieljosephvera.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1 Arizona State University</title>
      <link>https://www.gabrieljosephvera.com/school/asu/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/school/asu/</guid>
      <description>I transferred to Arizona State University in Fall of 2015. I picked ASU over a couple schools that I had gotten into including UCSD and UCSC. ASU was certainly a huge change from SCC escpecially since I had moved here from California and it was the first time I had been away from my family. However, I did come here with my best friend from high school so that definitely made the process easier for me.</description>
    </item>
    
    <item>
      <title>2 Santiago Canyon College</title>
      <link>https://www.gabrieljosephvera.com/school/santiago/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/school/santiago/</guid>
      <description>I went to Santiago Canyon College for 3 years after getting out of high school. Getting the classes I needed to transfer proved difficult given the volume of students that attended.
One of the major difficulties I had was getting into the programming and physics classes that were required to transer. There was only one professor at the time teaching C++ class required to transer, and his class filled up really quick.</description>
    </item>
    
    <item>
      <title>3 Esperanza High School</title>
      <link>https://www.gabrieljosephvera.com/school/esperanza/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/school/esperanza/</guid>
      <description>I went to Esperanza from Fall 2008 to Spring 2012. My first experience of high school was joining the football team, and meeting many new people.
School went pretty well, but was fairly challenging due to the amount of time that was required from football. Over time I realized the sport wasn&amp;rsquo;t for me. Not due to the challenge of the sport, but just didn&amp;rsquo;t really fit for me.
After my last season of football my sophomore year I joined the track team.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://www.gabrieljosephvera.com/post/about_me/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/post/about_me/</guid>
      <description>Meticulous Computer Software Engineer whose passions include developing software that improves current processes. Possesses practical knowledge in the design and implementation of software. Consistently meets deadlines and delivers high quality solutions. Enjoys learning and self guided research into programming related topics.
Currently working at Connexta in Phoenix, AZ.</description>
    </item>
    
    <item>
      <title>Problem 1</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem1/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem1/</guid>
      <description>Ruby 1sum = 0; 2i = 0; 3loop do 4 if i == 1000 5 break 6 end 7 if i % 3 == 0 || i % 5 == 0 8 sum += i 9 end 10 i += 1 11end 12puts &amp;#34;#{sum}&amp;#34;
Clojure 1(ns problem1.core) 2 3(defn mod3or5? 4 [x] 5 (cond 6 (= (mod x 3) 0) x 7 (= (mod x 5) 0) x 8 :else 0)) 9 10(defn -main 11 [] 12 (println (reduce + (map mod3or5?</description>
    </item>
    
    <item>
      <title>Problem 1 in Clojure</title>
      <link>https://www.gabrieljosephvera.com/project_files/clojure/problem1cl/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/clojure/problem1cl/</guid>
      <description>1(ns problem1.core) 2 3(defn mod3or5? 4 [x] 5 (cond 6 (= (mod x 3) 0) x 7 (= (mod x 5) 0) x 8 :else 0)) 9 10(defn -main 11 [] 12 (println (reduce + (map mod3or5? (range 1 1000)) ))) </description>
    </item>
    
    <item>
      <title>Problem 1 in Perl 6</title>
      <link>https://www.gabrieljosephvera.com/project_files/perl6/problem1p6/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/perl6/problem1p6/</guid>
      <description>1#Find the sum of all the multiples of 3 or 5 below 1000 2say [+] ( 1 .. ^ 1000 ).grep({ !($_ % ( 3 &amp;amp; 5 ))}); </description>
    </item>
    
    <item>
      <title>Problem 1 in Ruby</title>
      <link>https://www.gabrieljosephvera.com/project_files/ruby/problem1rb/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/ruby/problem1rb/</guid>
      <description>1sum = 0; 2i = 0; 3loop do 4 if i == 1000 5 break 6 end 7 if i % 3 == 0 || i % 5 == 0 8 sum += i 9 end 10 i += 1 11end 12puts &amp;#34;#{sum}&amp;#34; </description>
    </item>
    
    <item>
      <title>Problem 10</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem10/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem10/</guid>
      <description>Ruby 1def sum_primes_in_range(num, max) 2 sum = 0 3 loop do 4 if num &amp;gt; max 5 break 6 end 7 prime = true; 8 temp = 2; 9 while temp &amp;lt;= Math.sqrt(num) 10 if num % 2 == 0 11 prime = false; 12 break; 13 end 14 if num % temp == 0 15 prime = false; 16 break; 17 end 18 temp += 1 19 end 20 if prime == true 21 sum += num 22 end 23 num += 1; 24 end 25 sum 26end 27 28a, b, c, d, e, f, g, h= [ 29 Thread.</description>
    </item>
    
    <item>
      <title>Problem 11</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem11/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem11/</guid>
      <description>Check back solution in the works.</description>
    </item>
    
    <item>
      <title>Problem 12</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem12/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem12/</guid>
      <description>Clojure 1(ns problem12.core) 2 3(defn num-of-divisors [n] 4 (* 2 (count (filter #(= (mod n %) 0) ( range 2 (+ (int (Math/sqrt n)) 1) ) ) ) )) 5 6(defn -main 7 [] 8 (println (first (filter #(&amp;gt; (num-of-divisors % ) 500) (map #(reduce + (range %)) (range))))))</description>
    </item>
    
    <item>
      <title>Problem 13</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem13/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem13/</guid>
      <description>Ruby 1 1 data = &amp;#39;&amp;#39; 2 2 sum = 0 3 3 f = File.open(&amp;#34;problem13.txt&amp;#34;, &amp;#34;r&amp;#34;) 4 4 f.each_line do |line| 5 5 sum += line.to_i 6 6 end 7 7 sum = sum.to_s.split(//); 8 8 ans = &amp;#39;&amp;#39; 9 9 for index in 0 ... 10 10 10 ans += sum[index].inspect 11 11 end 12 12 puts&amp;#34;#{ans.tr&amp;#39;&amp;#34;&amp;#39;,&amp;#39;&amp;#39;}&amp;#34;</description>
    </item>
    
    <item>
      <title>Problem 14</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem14/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem14/</guid>
      <description>Ruby 1def get_n_chains(orig_start, last) 2 start = orig_start 3 max = 0 4 chain = 0 5 current_chain = 0; 6 loop do 7 if start == last - 1 8 break 9 end 10 current_elem = start 11 chain = 0 12 loop do 13 if current_elem % 2 == 0 14 current_elem = current_elem/2 15 chain += 1 16 if current_elem == 1 17 break 18 end 19 else 20 current_elem = (3*current_elem) + 1 21 chain += 1 22 end 23 end 24 if current_chain &amp;lt; chain 25 current_chain = chain 26 max = start 27 end 28 start = start - 1 29 end 30 return max, current_chain 31end 32 33a, b, c, d, e, f, g= [ 34 Thread.</description>
    </item>
    
    <item>
      <title>Problem 16</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem16/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem16/</guid>
      <description>Ruby 1num = 2**1000 2num = num.to_s.split(&amp;#39;&amp;#39;).map(&amp;amp;:to_i) 3result = 0; 4num.each{ |x| 5 result += x 6} 7puts&amp;#34;#{result}&amp;#34;</description>
    </item>
    
    <item>
      <title>Problem 2</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem2/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem2/</guid>
      <description>Ruby 1sum_even = 0; 2term_prev = 1; 3term_current = 1; 4loop do 5 if term_current &amp;gt;= 4000000 6 break 7 end 8 temp = term_current; 9 term_current = term_current + term_prev; 10 term_prev = temp; 11 if term_current % 2 == 0 12 sum_even += term_current; 13 end 14end 15puts &amp;#34;#{sum_even}&amp;#34;
Clojure 1(ns problem2.core) 2;generate a list of the fibonacci numbers 3(def gen-fib 4 (lazy-cat [0 1] (map + (rest gen-fib) gen-fib))) 5 6(defn -main 7 [] 8 (println (reduce + (filter even?</description>
    </item>
    
    <item>
      <title>Problem 2 in Clojure</title>
      <link>https://www.gabrieljosephvera.com/project_files/clojure/problem2cl/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/clojure/problem2cl/</guid>
      <description>Clojure was nice for this problem, because you can just concatenate all the terms from gen-fib to form a lazy sequence.
1(ns problem2.core) 2 3(def gen-fib 4 (lazy-cat [0 1] (map + (rest gen-fib) gen-fib))) 5 6(defn -main 7 [] 8 (println (reduce + (filter even? (take-while (partial &amp;gt; 4000000) gen-fib)))))</description>
    </item>
    
    <item>
      <title>Problem 2 in Perl 6</title>
      <link>https://www.gabrieljosephvera.com/project_files/perl6/problem2p6/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/perl6/problem2p6/</guid>
      <description>1say( 1, 1, *+* ... ^*&amp;gt; 4000000).grep( * %% 2 ).sum; </description>
    </item>
    
    <item>
      <title>Problem 2 in Ruby</title>
      <link>https://www.gabrieljosephvera.com/project_files/ruby/problem2rb/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/ruby/problem2rb/</guid>
      <description>1sum_even = 0; 2term_prev = 1; 3term_current = 1; 4loop do 5 if term_current &amp;gt;= 4000000 6 break 7 end 8 temp = term_current; 9 term_current = term_current + term_prev; 10 term_prev = temp; 11 if term_current % 2 == 0 12 sum_even += term_current; 13 end 14end 15puts &amp;#34;#{sum_even}&amp;#34; </description>
    </item>
    
    <item>
      <title>Problem 3</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem3/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem3/</guid>
      <description>Ruby 1number = 600851475143; 2i = 2; 3max_divisor = 0; 4loop do 5 if i &amp;gt; Integer.sqrt(number) 6 break; 7 end 8 if number % i == 0 9 max_divisor = i; 10 number = number/i; 11 i = 2; 12 else 13 i += 1; 14 end 15end 16puts &amp;#34;#{number}&amp;#34;</description>
    </item>
    
    <item>
      <title>Problem 3 in Ruby</title>
      <link>https://www.gabrieljosephvera.com/project_files/ruby/problem3rb/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/ruby/problem3rb/</guid>
      <description>1number = 600851475143; 2i = 2; 3max_divisor = 0; 4loop do 5 if i &amp;gt; Integer.sqrt(number) 6 break; 7 end 8 if number % i == 0 9 max_divisor = i; 10 number = number/i; 11 i = 2; 12 else 13 i += 1; 14 end 15end 16puts &amp;#34;#{number}&amp;#34; </description>
    </item>
    
    <item>
      <title>Problem 4</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem4/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem4/</guid>
      <description>Ruby 1num = 999; 2current_palin = 0; 3loop do 4 second_num = 999; 5 loop do 6 current_product = num * second_num; 7 if current_product.to_s.reverse == current_product.to_s 8 if current_palin &amp;lt; current_product 9 current_palin = current_product.to_i; 10 end 11 end 12 second_num -= 1; 13 if second_num &amp;lt; 100 14 break; 15 end 16 end 17 num -= 1; 18 if num &amp;lt; 100 19 break; 20 end 21end 22puts&amp;#34;#{current_palin}&amp;#34;;</description>
    </item>
    
    <item>
      <title>Problem 4 in Clojure</title>
      <link>https://www.gabrieljosephvera.com/project_files/clojure/problem4cl/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/clojure/problem4cl/</guid>
      <description>1(defn is-palindrome? 2 [num] 3 (= (str num) (apply str (reverse (str num))))) 4 5(defn get-val 6 [num] 7 (cond 8 (= (is-palindrome? num) true) num 9 :else 0)) 10 11(defn cart-prod 12 [] 13 (for [x (range 100 1000) 14 y (range 100 1000)] 15 (* x y))) 16 17(defn -main 18 [] 19 (println (apply max (map get-val (cart-prod))))) </description>
    </item>
    
    <item>
      <title>Problem 4 in Perl 6</title>
      <link>https://www.gabrieljosephvera.com/project_files/perl6/problem4p6/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/perl6/problem4p6/</guid>
      <description>1say max ([X*] (100..999, 100..999)).grep: {.flip eq $_} </description>
    </item>
    
    <item>
      <title>Problem 4 in Ruby</title>
      <link>https://www.gabrieljosephvera.com/project_files/ruby/problem4rb/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/ruby/problem4rb/</guid>
      <description>1num = 999; 2current_palin = 0; 3loop do 4 second_num = 999; 5 loop do 6 current_product = num * second_num; 7 if current_product.to_s.reverse == current_product.to_s 8 if current_palin &amp;lt; current_product 9 current_palin = current_product.to_i; 10 end 11 end 12 second_num -= 1; 13 if second_num &amp;lt; 100 14 break; 15 end 16 end 17 num -= 1; 18 if num &amp;lt; 100 19 break; 20 end 21end 22puts&amp;#34;#{current_palin}&amp;#34;; </description>
    </item>
    
    <item>
      <title>Problem 5</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem5/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem5/</guid>
      <description>Ruby 1puts&amp;#34;#{(1..20).reduce(1, :lcm)}&amp;#34;
Perl 6 1say [lcm] ( 1 .. 20 );</description>
    </item>
    
    <item>
      <title>Problem 5 in Perl 6</title>
      <link>https://www.gabrieljosephvera.com/project_files/perl6/problem5p6/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/perl6/problem5p6/</guid>
      <description>1say [lcm] ( 1 .. 20 ); </description>
    </item>
    
    <item>
      <title>Problem 5 in Ruby</title>
      <link>https://www.gabrieljosephvera.com/project_files/ruby/problem5rb/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/ruby/problem5rb/</guid>
      <description>1puts&amp;#34;#{(1..20).reduce(1, :lcm)}&amp;#34; </description>
    </item>
    
    <item>
      <title>Problem 6</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem6/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem6/</guid>
      <description>Ruby 1sum_squares = 0 2count = 0 3square_sum = 0 4loop do 5 if count == 101 6 break 7 end 8 sum_squares += (count ** 2) 9 square_sum += count 10 count += 1 11end 12puts&amp;#34;#{(square_sum ** 2) - sum_squares}&amp;#34;
Clojure 1(ns problem6.core) 2 3(defn -main 4 [] 5 (println (- (int (Math/pow (reduce + (range 1 101)) 2)) (int (reduce + (map #(Math/pow % 2) (range 1 101)))))))</description>
    </item>
    
    <item>
      <title>Problem 6 in Clojure</title>
      <link>https://www.gabrieljosephvera.com/project_files/clojure/problem6cl/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/clojure/problem6cl/</guid>
      <description>1(defn -main 2 [] 3 (println (- (int (Math/pow (reduce + (range 1 101)) 2)) (int (reduce + (map #(Math/pow % 2) (range 1 101))))))) </description>
    </item>
    
    <item>
      <title>Problem 6 in Perl 6</title>
      <link>https://www.gabrieljosephvera.com/project_files/perl6/problem6p6/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/perl6/problem6p6/</guid>
      <description>1say ((1..100).sum ** 2) - ((1..100).map(* ** 2).sum) </description>
    </item>
    
    <item>
      <title>Problem 6 in Ruby</title>
      <link>https://www.gabrieljosephvera.com/project_files/ruby/problem6rb/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/ruby/problem6rb/</guid>
      <description>1sum_squares = 0 2count = 0 3square_sum = 0 4loop do 5 if count == 101 6 break 7 end 8 sum_squares += (count ** 2) 9 square_sum += count 10 count += 1 11end 12puts&amp;#34;#{(square_sum ** 2) - sum_squares}&amp;#34; </description>
    </item>
    
    <item>
      <title>Problem 7</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem7/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem7/</guid>
      <description>Ruby 1counter = 0; 2num = 1; 3loop do 4 prime = true; 5 temp = 2; 6 while temp &amp;lt;= Math.sqrt(num) 7 if num % temp == 0 8 prime = false; 9 break; 10 end 11 temp += 1; 12 end 13 if prime == true 14 counter += 1; 15 end 16 if counter == 10002 17 break; 18 end 19 num += 1; 20end 21puts&amp;#34;#{num}&amp;#34;;
Clojure 1(ns problem7.</description>
    </item>
    
    <item>
      <title>Problem 8</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem8/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem8/</guid>
      <description>Ruby 1data = &amp;#39;&amp;#39; 2f = File.open(&amp;#34;problem8.txt&amp;#34;, &amp;#34;r&amp;#34;) 3 f.each_line do |line| 4 data += line 5 end 6nums = data.chars 7nums = nums.map(&amp;amp;:to_i); 8max = 13; 9min = 0; 10orig_min = 0; 11max_prod = 0; 12while max &amp;lt; nums.length 13 min = orig_min 14 temp_prod = 1; 15 while min != max 16 temp_prod *= nums[min] 17 min+=1 18 end 19 if temp_prod &amp;gt; max_prod 20 max_prod = temp_prod 21 end 22 orig_min+=1 23 max+=1 24end 25puts&amp;#34;#{max_prod}&amp;#34;</description>
    </item>
    
    <item>
      <title>Problem 9</title>
      <link>https://www.gabrieljosephvera.com/project_files/problem9/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_files/problem9/</guid>
      <description>Ruby 1m = 2 2break_nested = false; 3loop do 4 if m &amp;gt; 1000 5 break 6 end 7 n = 1 8 loop do 9 if n &amp;gt; m 10 break 11 end 12 a = ((m ** 2) - (n ** 2)) 13 b = (2*m * n) 14 c = (m ** 2 + n ** 2) 15 if a + b + c == 1000 16 puts&amp;#34;#{a*b*c}&amp;#34; 17 break_nested = true; 18 break 19 end 20 n +=1 21 end 22 break if break_nested; 23 m += 1 24end</description>
    </item>
    
    <item>
      <title>Project Euler</title>
      <link>https://www.gabrieljosephvera.com/project/project_euler/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project/project_euler/</guid>
      <description>A current ongoing project that has piqued my interest is Project Euler . Essentially it&amp;rsquo;s a series of math problems for which you need to devise an algorithm and a program to compute the solution.
I&amp;rsquo;ve been using it as a way to ramp up my skills in other languages that I am not comfortable with such as, Perl 6 , Clojure , and Ruby . I chose these languages for different reasons.</description>
    </item>
    
    <item>
      <title>Project Euler Problems</title>
      <link>https://www.gabrieljosephvera.com/project_euler_directory/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project_euler_directory/</guid>
      <description>Problem 1: If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000: Solution
Problem 2: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, &amp;hellip; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms: Solution</description>
    </item>
    
    <item>
      <title>Website</title>
      <link>https://www.gabrieljosephvera.com/project/website/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>https://www.gabrieljosephvera.com/project/website/</guid>
      <description>This website is my biggest personal project that I have undertaken.
It is hosted with Github Pages , which by far was the best option for my purpose. I wanted to have a website where I could showcase some projects that would show my skills and what tools and languages I am currently looking at.
As Github pages only hosts static sites I had to find the best tool to generate a static site that was presentable.</description>
    </item>
    
  </channel>
</rss>